name: CI

on:
  - push
  - pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          pip install pipenv
          pipenv install --dev
      - name: check Black formatting
        run: |
          pipenv run black --check .
      - name: check dependencies against PyUp and PEP 508
        run: |
          pipenv check

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        pip install pipenv
        pipenv install --dev
    - name: Run Tests
      run: |
        pipenv run coverage run --source . manage.py test
        pipenv run coverage xml
    - name: Migrate database
      run: |
        pipenv run python3 manage.py migrate
    - name: Collect static files
      run: |
        pipenv run python3 manage.py collectstatic --noinput
    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml

    # Docker
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        install: true

    - uses: satackey/action-docker-layer-caching@v0.0.8
      continue-on-error: true

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6

  push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true

      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          pull: true
          push: true
          cache-from: type=registry,ref=etnguyen03/opendental-patientportal:latest
          cache-to: type=inline
          tags: etnguyen03/opendental-patientportal:latest

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          pull: true
          push: true
          cache-from: type=registry,ref=ghcr.io/etnguyen03/opendental-patientportal:latest
          cache-to: type=inline
          tags: ghcr.io/etnguyen03/opendental-patientportal:latest
